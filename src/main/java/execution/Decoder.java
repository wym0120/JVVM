package execution;

import instructions.base.Instruction;
import instructions.base.OpCode;
import instructions.comparison.*;
import instructions.constant.*;
import instructions.control.*;
import instructions.conversion.*;
import instructions.extended.IFNONNULL;
import instructions.extended.IFNULL;
import instructions.invoke.INVOKE_INTERFACE;
import instructions.invoke.INVOKE_SPECIAL;
import instructions.invoke.INVOKE_STATIC;
import instructions.invoke.INVOKE_VIRTUAL;
import instructions.load.*;
import instructions.math.algorithm.*;
import instructions.math.bool.*;
import instructions.math.shift.*;
import instructions.references.*;
import instructions.stack.*;
import instructions.store.*;

import java.util.HashMap;

import static instructions.base.OpCode.RETURN_;

public class Decoder {

    private static HashMap<Integer, Instruction> opMap;

    static {
        opMap = new HashMap<>();
        opMap.put(OpCode.NOP, new NOP());
        opMap.put(OpCode.ACONST_NULL, new ACONST_NULL());
        opMap.put(OpCode.ICONST_M1, new ICONST_N(-1));
        opMap.put(OpCode.ICONST_0, new ICONST_N(0));
        opMap.put(OpCode.ICONST_1, new ICONST_N(1));
        opMap.put(OpCode.ICONST_2, new ICONST_N(2));
        opMap.put(OpCode.ICONST_3, new ICONST_N(3));
        opMap.put(OpCode.ICONST_4, new ICONST_N(4));
        opMap.put(OpCode.ICONST_5, new ICONST_N(5));
        opMap.put(OpCode.LCONST_0, new LCONST_N(0));
        opMap.put(OpCode.BIPUSH, new BIPUSH());
        opMap.put(OpCode.SIPUSH, new SIPUSH());
        opMap.put(OpCode.LDC, new LDC());
        opMap.put(OpCode.LDC_W, new LDC_W());
        opMap.put(OpCode.LDC2_W, new LDC2_W());
        opMap.put(OpCode.ILOAD, new ILOAD());
        opMap.put(OpCode.LLOAD, new LLOAD());
        opMap.put(OpCode.FLOAD, new FLOAD());
        opMap.put(OpCode.DLOAD, new DLOAD());
        opMap.put(OpCode.ALOAD, new ALOAD());
        opMap.put(OpCode.LLOAD_2, new LLOAD_N(2));
        opMap.put(OpCode.LLOAD_3, new LLOAD_N(3));
        opMap.put(OpCode.FLOAD_0, new FLOAD_N(0));
        opMap.put(OpCode.FLOAD_1, new FLOAD_N(1));
        opMap.put(OpCode.FLOAD_2, new FLOAD_N(2));
        opMap.put(OpCode.FLOAD_3, new FLOAD_N(3));
        opMap.put(OpCode.DLOAD_0, new DLOAD_N(0));
        opMap.put(OpCode.DLOAD_1, new DLOAD_N(1));
        opMap.put(OpCode.DLOAD_2, new DLOAD_N(2));
        opMap.put(OpCode.DLOAD_3, new DLOAD_N(3));
        opMap.put(OpCode.FALOAD, new FALOAD());
        opMap.put(OpCode.DALOAD, new DALOAD());
        opMap.put(OpCode.AALOAD, new AALOAD());
        opMap.put(OpCode.BALOAD, new BALOAD());
        opMap.put(OpCode.CALOAD, new CALOAD());
        opMap.put(OpCode.SALOAD, new SALOAD());
        opMap.put(OpCode.ISTORE, new ISTORE());
        opMap.put(OpCode.LSTORE, new LSTORE());
        opMap.put(OpCode.FSTORE, new FSTORE());
        opMap.put(OpCode.DSTORE, new DSTORE());
        opMap.put(OpCode.LSTORE_1, new LSTORE_N(1));
        opMap.put(OpCode.LSTORE_2, new LSTORE_N(2));
        opMap.put(OpCode.LSTORE_3, new LSTORE_N(3));
        opMap.put(OpCode.FSTORE_0, new FSTORE_N(0));
        opMap.put(OpCode.FSTORE_1, new FSTORE_N(1));
        opMap.put(OpCode.FSTORE_2, new FSTORE_N(2));
        opMap.put(OpCode.FSTORE_3, new FSTORE_N(3));
        opMap.put(OpCode.DSTORE_0, new DSTORE_N(0));
        opMap.put(OpCode.DSTORE_1, new DSTORE_N(1));
        opMap.put(OpCode.DSTORE_2, new DSTORE_N(2));
        opMap.put(OpCode.LASTORE, new LASTORE());
        opMap.put(OpCode.FASTORE, new FASTORE());
        opMap.put(OpCode.DASTORE, new DASTORE());
        opMap.put(OpCode.AASTORE, new AASTORE());
        opMap.put(OpCode.BASTORE, new BASTORE());
        opMap.put(OpCode.CASTORE, new CASTORE());
        opMap.put(OpCode.SASTORE, new SASTORE());
        opMap.put(OpCode.POP, new POP());
        opMap.put(OpCode.POP2, new POP2());
        opMap.put(OpCode.DUP, new DUP());
        opMap.put(OpCode.IADD, new IADD());
        opMap.put(OpCode.LADD, new LADD());
        opMap.put(OpCode.FADD, new FADD());
        opMap.put(OpCode.DADD, new DADD());
        opMap.put(OpCode.ISUB, new ISUB());
        opMap.put(OpCode.LSUB, new LSUB());
        opMap.put(OpCode.FSUB, new FSUB());
        opMap.put(OpCode.DSUB, new DSUB());
        opMap.put(OpCode.IMUL, new IMUL());
        opMap.put(OpCode.LMUL, new LMUL());
        opMap.put(OpCode.IREM, new IREM());
        opMap.put(OpCode.LREM, new LREM());
        opMap.put(OpCode.FREM, new FREM());
        opMap.put(OpCode.DREM, new DREM());
        opMap.put(OpCode.INEG, new INEG());
        opMap.put(OpCode.LNEG, new LNEG());
        opMap.put(OpCode.FNEG, new FNEG());
        opMap.put(OpCode.DNEG, new DNEG());
        opMap.put(OpCode.ISHL, new ISHL());
        opMap.put(OpCode.LSHL, new LSHL());
        opMap.put(OpCode.IOR, new IOR());
        opMap.put(OpCode.LOR, new LOR());
        opMap.put(OpCode.IXOR, new IXOR());
        opMap.put(OpCode.LXOR, new LXOR());
        opMap.put(OpCode.IINC, new IINC());
        opMap.put(OpCode.I2L, new I2L());
        opMap.put(OpCode.I2F, new I2F());
        opMap.put(OpCode.I2D, new I2D());
        opMap.put(OpCode.L2I, new L2I());
        opMap.put(OpCode.L2F, new L2F());
        opMap.put(OpCode.D2F, new D2F());
        opMap.put(OpCode.I2B, new I2B());
        opMap.put(OpCode.I2C, new I2C());
        opMap.put(OpCode.I2S, new I2S());
        opMap.put(OpCode.LCMP, new LCMP());
        opMap.put(OpCode.FCMPL, new FCMPL());
        opMap.put(OpCode.FCMPG, new FCMPG());
        opMap.put(OpCode.DCMPL, new DCMPL());
        opMap.put(OpCode.DCMPG, new DCMPG());
        opMap.put(OpCode.IFEQ, new IFEQ());
        opMap.put(OpCode.LCONST_1, new LCONST_N(1));
        opMap.put(OpCode.FCONST_0, new FCONST_N(0));
        opMap.put(OpCode.FCONST_1, new FCONST_N(1));
        opMap.put(OpCode.FCONST_2, new FCONST_N(2));
        opMap.put(OpCode.DCONST_0, new DCONST_N(0));
        opMap.put(OpCode.DCONST_1, new DCONST_N(1));
        opMap.put(OpCode.ILOAD_0, new ILOAD_N(0));
        opMap.put(OpCode.ILOAD_1, new ILOAD_N(1));
        opMap.put(OpCode.ILOAD_2, new ILOAD_N(2));
        opMap.put(OpCode.ILOAD_3, new ILOAD_N(3));
        opMap.put(OpCode.LLOAD_0, new LLOAD_N(0));
        opMap.put(OpCode.LLOAD_1, new LLOAD_N(1));
        opMap.put(OpCode.ALOAD_0, new ALOAD_N(0));
        opMap.put(OpCode.ALOAD_1, new ALOAD_N(1));
        opMap.put(OpCode.ALOAD_2, new ALOAD_N(2));
        opMap.put(OpCode.ALOAD_3, new ALOAD_N(3));
        opMap.put(OpCode.IALOAD, new IALOAD());
        opMap.put(OpCode.LALOAD, new LALOAD());
        opMap.put(OpCode.ASTORE, new ASTORE());
        opMap.put(OpCode.ISTORE_0, new ISTORE_N(0));
        opMap.put(OpCode.ISTORE_1, new ISTORE_N(1));
        opMap.put(OpCode.ISTORE_2, new ISTORE_N(2));
        opMap.put(OpCode.ISTORE_3, new ISTORE_N(3));
        opMap.put(OpCode.LSTORE_0, new LSTORE_N(0));
        opMap.put(OpCode.DSTORE_3, new DSTORE_N(3));
        opMap.put(OpCode.ASTORE_0, new ASTORE_N(0));
        opMap.put(OpCode.ASTORE_1, new ASTORE_N(1));
        opMap.put(OpCode.ASTORE_2, new ASTORE_N(2));
        opMap.put(OpCode.ASTORE_3, new ASTORE_N(3));
        opMap.put(OpCode.IASTORE, new IASTORE());
        opMap.put(OpCode.DUP_X1, new DUP_X1());
        opMap.put(OpCode.DUP_X2, new DUP_X2());
        opMap.put(OpCode.DUP2, new DUP2());
        opMap.put(OpCode.DUP2_X1, new DUP2_X1());
        opMap.put(OpCode.DUP2_X2, new DUP2_X2());
        opMap.put(OpCode.SWAP, new SWAP());
        opMap.put(OpCode.FMUL, new FMUL());
        opMap.put(OpCode.DMUL, new DMUL());
        opMap.put(OpCode.IDIV, new IDIV());
        opMap.put(OpCode.LDIV, new LDIV());
        opMap.put(OpCode.FDIV, new FDIV());
        opMap.put(OpCode.DDIV, new DDIV());
        opMap.put(OpCode.ISHR, new ISHR());
        opMap.put(OpCode.LSHR, new LSHR());
        opMap.put(OpCode.IUSHR, new IUSHR());
        opMap.put(OpCode.LUSHR, new LUSHR());
        opMap.put(OpCode.IAND, new IAND());
        opMap.put(OpCode.LAND, new LAND());
        opMap.put(OpCode.L2D, new L2D());
        opMap.put(OpCode.F2I, new F2I());
        opMap.put(OpCode.F2L, new F2L());
        opMap.put(OpCode.F2D, new F2D());
        opMap.put(OpCode.D2I, new D2I());
        opMap.put(OpCode.D2L, new D2L());
        opMap.put(OpCode.IFNE, new IFNE());
        opMap.put(OpCode.IFLT, new IFLT());
        opMap.put(OpCode.IFGE, new IFGE());
        opMap.put(OpCode.IFGT, new IFGT());
        opMap.put(OpCode.IFLE, new IFLE());
        opMap.put(OpCode.IF_ICMPEQ, new IF_ICMPEQ());
        opMap.put(OpCode.IF_ICMPNE, new IF_ICMPNE());
        opMap.put(OpCode.IF_ICMPLT, new IF_ICMPLT());
        opMap.put(OpCode.IF_ICMPGE, new IF_ICMPGE());
        opMap.put(OpCode.IF_ICMPGT, new IF_ICMPGT());
        opMap.put(OpCode.IF_ICMPLE, new IF_ICMPLE());
        opMap.put(OpCode.IF_ACMPEQ, new IF_ACMPEQ());
        opMap.put(OpCode.IF_ACMPNE, new IF_ACMPNE());
        opMap.put(OpCode.GOTO_, new GOTO());

//        opMap.put(OpCode.JSR, new JSR());
//        opMap.put(OpCode.RET, new RET());

//TODO        opMap.put(OpCode.TABLESWITCH, new TABLESWITCH());
//TODO        opMap.put(OpCode.LOOKUPSWITCH, new LOOKUPSWITCH());
        opMap.put(OpCode.IRETURN, new IRETURN());
        opMap.put(OpCode.LRETURN, new LRETURN());
        opMap.put(OpCode.FRETURN, new FRETURN());
        opMap.put(OpCode.DRETURN, new DRETURN());
        opMap.put(OpCode.ARETURN, new ARETURN());
        opMap.put(RETURN_, new RETURN());
        opMap.put(OpCode.GETSTATIC, new GETSTATIC());
        opMap.put(OpCode.PUTSTATIC, new PUTSTATIC());
        opMap.put(OpCode.GETFIELD, new GETFIELD());
        opMap.put(OpCode.PUTFIELD, new PUTFIELD());
        opMap.put(OpCode.INVOKEVIRTUAL, new INVOKE_VIRTUAL());
        opMap.put(OpCode.INVOKESPECIAL, new INVOKE_SPECIAL());
        opMap.put(OpCode.INVOKESTATIC, new INVOKE_STATIC());
        opMap.put(OpCode.INVOKEINTERFACE, new INVOKE_INTERFACE());
//        opMap.put(OpCode.INVOKEDYNAMIC, new INVOKEDYNAMIC());
        opMap.put(OpCode.NEW_, new NEW());
        opMap.put(OpCode.NEWARRAY, new NEWARRAY());
        opMap.put(OpCode.ANEWARRAY, new ANEWARRAY());
        opMap.put(OpCode.ARRAYLENGTH, new ARRAYLENGTH());
//        opMap.put(OpCode.ATHROW, new ATHROW());
        opMap.put(OpCode.CHECKCAST, new CHECKCAST());
        opMap.put(OpCode.INSTANCEOF_, new INSTANCEOF());
//        opMap.put(OpCode.MONITORENTER, new MONITORENTER());
//        opMap.put(OpCode.MONITOREXIT, new MONITOREXIT());
//        opMap.put(OpCode.WIDE, new WIDE());
        opMap.put(OpCode.MULTIANEWARRAY, new MULTIANEWARRAY());
        opMap.put(OpCode.IFNULL, new IFNULL());
        opMap.put(OpCode.IFNONNULL, new IFNONNULL());
        opMap.put(OpCode.GOTO_W, new GOTO_W());

//        opMap.put(OpCode.JSR_W, new JSR_W());
//        opMap.put(OpCode.BREAKPOINT, new BREAKPOINT());
//        opMap.put(OpCode.IMPDEP1, new IMPDEP1());
//        opMap.put(OpCode.IMPDEP2, new IMPDEP2());
    }

    public static Instruction decode(int opcode) {
        Instruction instruction = opMap.get(opcode);
        if (instruction == null) {
            throw new UnsupportedOperationException("Unsupported instruction " + String.format("0x%08X", opcode));
        }
        return instruction;
    }
}
